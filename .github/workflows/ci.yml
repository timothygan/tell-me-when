name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: ['**']

jobs:
  # Run backend build & test on all PRs and main/master pushes
  build-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
      - name: Build Go backend
        run: |
          go build -v ./...
      - name: Run Go backend tests (if present)
        run: |
          if ls *.go 1> /dev/null 2>&1; then go test -v ./...; fi
      - name: Run Go backend hello world
        run: |
          timeout 5s go run main.go || true

  # Run frontend build on all PRs and main/master pushes
  build-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: |
          if [ -f package.json ]; then npm ci; fi
      - name: Run frontend hello world (placeholder)
        run: |
          echo "Hello from frontend!"

  # --- Infrastructure Jobs ---

  terraform-fmt:
    name: "Terraform Format (All Envs)"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Format Check
        run: terraform fmt -check -recursive
    # Only run if infra changes
    paths:
      - 'infrastructure/**'

  # Example: Only run infra plan/apply on push to main/master
  terraform-plan-dev:
    name: "Terraform Plan (Dev)"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: terraform-fmt
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: cd infrastructure/environments/dev && terraform init -backend=false
      - name: Terraform Plan
        run: cd infrastructure/environments/dev && terraform plan
    paths:
      - 'infrastructure/**'

  terraform-apply-dev:
    name: "Terraform Apply (Dev)"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: terraform-plan-dev
    environment:
      name: dev
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: cd infrastructure/environments/dev && terraform init -backend-config=dev.tfbackend
      - name: Terraform Apply
        run: cd infrastructure/environments/dev && terraform apply -auto-approve
    paths:
      - 'infrastructure/**'

  terraform-plan-staging:
    name: "Terraform Plan (Staging)"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: terraform-fmt
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: cd infrastructure/environments/staging && terraform init -backend=false
      - name: Terraform Plan
        run: cd infrastructure/environments/staging && terraform plan
    paths:
      - 'infrastructure/**'

  terraform-apply-staging:
    name: "Terraform Apply (Staging)"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: terraform-plan-staging
    environment:
      name: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: cd infrastructure/environments/staging && terraform init -backend-config=staging.tfbackend
      - name: Terraform Apply
        run: cd infrastructure/environments/staging && terraform apply -auto-approve
    paths:
      - 'infrastructure/**'

  terraform-plan-prod:
    name: "Terraform Plan (Prod)"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: terraform-fmt
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: cd infrastructure/environments/prod && terraform init -backend=false
      - name: Terraform Plan
        run: cd infrastructure/environments/prod && terraform plan
    paths:
      - 'infrastructure/**'

  terraform-apply-prod:
    name: "Terraform Apply (Prod)"
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    needs: terraform-plan-prod
    environment:
      name: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Terraform Init
        run: cd infrastructure/environments/prod && terraform init -backend-config=prod.tfbackend
      - name: Terraform Apply
        run: cd infrastructure/environments/prod && terraform apply -auto-approve
    paths:
      - 'infrastructure/**'
